// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiketsApp;

#nullable disable

namespace TiketsApp.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20250506185005_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TiketsApp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AllRoles");

                    b.HasDiscriminator().HasValue("Role");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TiketsApp.Models.Admin", b =>
                {
                    b.HasBaseType("TiketsApp.Models.Role");

                    b.Property<bool?>("HasAllPermissions")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("TiketsApp.Models.Saller", b =>
                {
                    b.HasBaseType("TiketsApp.Models.Role");

                    b.Property<bool?>("BannedByAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNowRegister")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Saller");
                });

            modelBuilder.Entity("TiketsApp.Models.User", b =>
                {
                    b.HasBaseType("TiketsApp.Models.Role");

                    b.Property<bool?>("BannedByAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.ToTable("AllRoles", t =>
                        {
                            t.Property("BannedByAdmin")
                                .HasColumnName("User_BannedByAdmin");
                        });

                    b.HasDiscriminator().HasValue("User");
                });
#pragma warning restore 612, 618
        }
    }
}
